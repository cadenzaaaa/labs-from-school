// main .cpp

#include "FoodItem.h"
#include <iostream>
#include <iomanip> 

using namespace std;

int main(int argc, char* argv[]) {
   FoodItem FoodItem1;

   string itemName;
   double amountFat, amountCarbs, amountProtein;

   cin >> itemName;
   cin >> amountFat;
   cin >> amountCarbs;
   cin >> amountProtein;

   FoodItem FoodItem2 = FoodItem(itemName, amountFat, amountCarbs, amountProtein);

   double numServings;
   cin >> numServings;

   FoodItem1.PrintInfo();
   cout << fixed << setprecision(2);
   cout << "Number of calories for " << numServings << " serving(s): " << FoodItem1.GetCalories(numServings) << endl;
   cout << endl << endl;

   FoodItem2.PrintInfo();
   cout << "Number of calories for " << numServings << " serving(s): " << FoodItem2.GetCalories(numServings) << endl;

   return 0;
}


// fooditem.h

#ifndef FOODITEMH
#define FOODITEMH

#include <string>

using namespace std;

class FoodItem {
   public:
      // TODO: Declare default constructor
      FoodItem();

      // TODO: Declare second constructor with arguments
      // to initialize private data members
      FoodItem(string itemName, double amountFat, double amountCarbs, double amountProtein);

      string GetName();

      double GetFat();

      double GetCarbs();

      double GetProtein();

      double GetCalories(double numServings);

      void PrintInfo();

   private:
      string name;
      double fat;
      double carbs;
      double protein;
};

#endif

// fooditem.cpp


#include "FoodItem.h"
#include <iostream>
#include <iomanip> 

using namespace std;

// Define default constructor
FoodItem::FoodItem() {
   name = "None";
   fat = 0.00;
   carbs = 0.00;
   protein = 0.00;
}

// Define second constructor with arguments
// to initialize private data members
FoodItem::FoodItem(string itemName, double amountFat, double amountCarbs, double amountProtein) {
   name = itemName;
   fat = amountFat;
   carbs = amountCarbs;
   protein = amountProtein;
}

string FoodItem::GetName() {
   return name;
}

double FoodItem::GetFat() {
   return fat;
}

double FoodItem::GetCarbs() {
   return carbs;
}

double FoodItem::GetProtein() {
   return protein;
}

double FoodItem::GetCalories(double numServings) {
   // Calorie formula
   double calories = ((fat * 9) + (carbs * 4) + (protein * 4)) * numServings;
   return calories;
}

void FoodItem::PrintInfo() {
   cout << fixed << setprecision(2);
   cout << "Nutritional information per serving of " << name  << ":" << endl;
   cout << "   Fat: " << fat << " g" << endl;
   cout << "   Carbohydrates: " << carbs << " g" << endl;
   cout << "   Protein: " << protein << " g" << endl;
}
