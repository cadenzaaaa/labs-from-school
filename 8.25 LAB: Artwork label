// --- main.cpp --- 
#include "Artist.h"
#include "Artwork.h"
#include <iostream>
#include <string>
using namespace std;

int main() {
   string userTitle, userArtistName;
   int yearCreated, userBirthYear, userDeathYear;

   getline(cin, userArtistName);
   getline(cin, userTitle);
   cin >> userBirthYear;
   cin >> userDeathYear;
   cin >> yearCreated;

   Artist userArtist =  Artist(userArtistName, userBirthYear, userDeathYear);

   Artwork newArtwork = Artwork(userTitle, yearCreated, userArtist);

   newArtwork.PrintInfo();
}

// ---artist.h---
#ifndef ARTISTH
#define ARTISTH

#include <string>
using namespace std;

class Artist{
   public:
      Artist();

      Artist(string artistName, int birthYear, int deathYear);

      string GetName() const;

      int GetBirthYear() const;

      int GetDeathYear() const;

      void PrintInfo() const;
   
   private:
      // TODO: Declare private data members - artistName, birthYear, deathYear
      string artistName;
      int birthYear;
      int deathYear;

};

#endif

// ---artist.cpp---
#include "Artist.h"
#include <iostream>
#include <string>
using namespace std;

// TODO: Define default constructor
Artist::Artist() {
   artistName = "unknown";
   birthYear = -1;
   deathYear = -1;
}

// TODO: Define second constructor to initialize
//       private fields (artistName, birthYear, deathYear)
Artist::Artist(string userArtistName, int userBirthYear, int userDeathYear) {
   artistName = userArtistName;
   birthYear = userBirthYear;
   deathYear = userDeathYear;
}
// TODO: Define get functions: GetName(), GetBirthYear(), GetDeathYear()
string Artist::GetName() const{
   return artistName;
}

int Artist::GetBirthYear() const{
   return birthYear;
}

int Artist::GetDeathYear() const{
   return deathYear;
}

// TODO: Define PrintInfo() function
//      If deathYear is entered as -1, only print birthYear
void Artist::PrintInfo() const {
   if ((deathYear == -1) && (birthYear == -1)) {
      cout << "Artist: " << artistName << " (unknown)" << endl;
   }
   else if (deathYear == -1) {
      cout << "Artist: " << artistName << " (" << birthYear << " to present)" << endl;
   }
   else {
      cout << "Artist: " << artistName << " (" << birthYear << " to " << deathYear << ")" << endl;
   }
}

// ---artwork.h---
#ifndef ARTWORKH
#define ARTWORKH

#include "Artist.h"

class Artwork{
   public:
      Artwork();

      Artwork(string title, int yearCreated, Artist artist);

      string GetTitle();

      int GetYearCreated();

      void PrintInfo();
   
   private:
      // TODO: Declare private data members - title, yearCreated
      string title;
      int yearCreated;

      // TODO: Declare private data member artist of type Artist
      Artist artist;

};

#endif

// ---artwork.cpp---
#include "Artwork.h"
#include <iostream>

// TODO: Define default constructor
Artwork::Artwork() {
   title = "unknown";
   yearCreated = -1;
}

// TODO: Define second constructor to initialize
//       private fields (title, yearCreated, artist)
Artwork::Artwork(string userTitle, int yearCreated, Artist userArtist) {
   title = userTitle;
   this->yearCreated = yearCreated;
   artist = userArtist;
}
   
// TODO: Define get functions: GetTitle(), GetYearCreated()
string Artwork::GetTitle() {
   return title;
}

int Artwork::GetYearCreated() {
   return yearCreated;
}

// TODO: Define PrintInfo() function
//       Call the PrintInfo() function in the Artist class to print an artist's information  
void Artwork::PrintInfo() {
   artist.PrintInfo();
   cout << "Title: " << title << ", " << yearCreated << endl;
}
